"""
–ë–∞–∑–æ–≤—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥ –±–æ—Ç–∞.
"""

import logging
from aiogram import Router, F
from aiogram.filters import CommandStart, Command
from aiogram.types import Message, InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.utils.keyboard import InlineKeyboardBuilder
from sqlalchemy.ext.asyncio import AsyncSession

from ..models import get_db_session, User
from ..services.user_service import UserService
from ..config import settings

logger = logging.getLogger(__name__)
router = Router()


@router.message(CommandStart())
async def cmd_start(message: Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
    async for session in get_db_session():
        user_service = UserService(session)
        
        # –°–æ–∑–¥–∞–µ–º –∏–ª–∏ –æ–±–Ω–æ–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        user = await user_service.create_or_update_user(
            telegram_id=message.from_user.id,
            username=message.from_user.username,
            first_name=message.from_user.first_name,
            last_name=message.from_user.last_name,
            language_code=message.from_user.language_code
        )
        
        welcome_text = f"""
üîç <b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–æ—Ç –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ —Å–∞–π—Ç–æ–≤!</b>

–ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name}! –Ø –ø–æ–º–æ–≥—É –≤–∞–º –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –≤–∞—à–∏—Ö –≤–µ–±-—Å–∞–π—Ç–æ–≤.

<b>–ß—Ç–æ —è —É–º–µ—é:</b>
‚Ä¢ üìä –ú–æ–Ω–∏—Ç–æ—Ä–∏—Ç—å –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Å–∞–π—Ç–æ–≤ 24/7
‚Ä¢ ‚ö° –ú–≥–Ω–æ–≤–µ–Ω–Ω–æ —É–≤–µ–¥–æ–º–ª—è—Ç—å –æ–± –∏–∑–º–µ–Ω–µ–Ω–∏—è—Ö
‚Ä¢ üìà –ü—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∏ –æ—Ç—á–µ—Ç—ã
‚Ä¢ ‚è±Ô∏è –ò–∑–º–µ—Ä—è—Ç—å –≤—Ä–µ–º—è –æ—Ç–∫–ª–∏–∫–∞
‚Ä¢ üîß –ù–∞—Å—Ç—Ä–∞–∏–≤–∞—Ç—å –∏–Ω—Ç–µ—Ä–≤–∞–ª—ã –ø—Ä–æ–≤–µ—Ä–∫–∏

<b>–û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:</b>
/add - –î–æ–±–∞–≤–∏—Ç—å —Å–∞–π—Ç –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
/list - –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º—ã—Ö —Å–∞–π—Ç–æ–≤
/stats - –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –≤—Å–µ–º —Å–∞–π—Ç–∞–º
/settings - –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
/help - –°–ø—Ä–∞–≤–∫–∞ –ø–æ –∫–æ–º–∞–Ω–¥–∞–º
        """
        
        # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
        keyboard = InlineKeyboardBuilder()
        keyboard.add(InlineKeyboardButton(text="‚ûï –î–æ–±–∞–≤–∏—Ç—å —Å–∞–π—Ç", callback_data="add_website"))
        keyboard.add(InlineKeyboardButton(text="üìã –ú–æ–∏ —Å–∞–π—Ç—ã", callback_data="list_websites"))
        keyboard.add(InlineKeyboardButton(text="‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏", callback_data="settings"))
        keyboard.adjust(1)
        
        await message.answer(
            welcome_text,
            reply_markup=keyboard.as_markup()
        )


@router.message(Command("help"))
async def cmd_help(message: Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help"""
    help_text = """
üìö <b>–°–ø—Ä–∞–≤–∫–∞ –ø–æ –∫–æ–º–∞–Ω–¥–∞–º</b>

<b>üåê –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–∞–π—Ç–∞–º–∏:</b>
/add - –î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–π —Å–∞–π—Ç
/list - –°–ø–∏—Å–æ–∫ –≤–∞—à–∏—Ö —Å–∞–π—Ç–æ–≤
/remove - –£–¥–∞–ª–∏—Ç—å —Å–∞–π—Ç
/edit - –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–∞–π—Ç–∞

<b>üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏ –æ—Ç—á–µ—Ç—ã:</b>
/stats - –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
/report - –î–µ—Ç–∞–ª—å–Ω—ã–π –æ—Ç—á–µ—Ç
/history - –ò—Å—Ç–æ—Ä–∏—è –ø—Ä–æ–≤–µ—Ä–æ–∫

<b>‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏:</b>
/settings - –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
/timezone - –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—Ä–µ–º–µ–Ω–Ω—É—é –∑–æ–Ω—É
/interval - –ù–∞—Å—Ç—Ä–æ–∏—Ç—å –∏–Ω—Ç–µ—Ä–≤–∞–ª –ø—Ä–æ–≤–µ—Ä–∫–∏

<b>üîß –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ:</b>
/status - –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å –±–æ—Ç–∞
/support - –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞

‚ùì –î–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Å–∞–π—Ç–∞ –ø—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –º–Ω–µ URL!
    """
    
    await message.answer(help_text)


@router.message(Command("stats"))
async def cmd_stats(message: Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /stats"""
    async for session in get_db_session():
        user_service = UserService(session)
        stats = await user_service.get_user_stats(message.from_user.id)
        
        if not stats:
            await message.answer("üìä –£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º—ã—Ö —Å–∞–π—Ç–æ–≤.")
            return
        
        stats_text = f"""
üìä <b>–í–∞—à–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞</b>

üåê <b>–í—Å–µ–≥–æ —Å–∞–π—Ç–æ–≤:</b> {stats['total_websites']}
‚úÖ <b>–ê–∫—Ç–∏–≤–Ω—ã—Ö:</b> {stats['active_websites']}
üü¢ <b>–†–∞–±–æ—Ç–∞—é—â–∏—Ö:</b> {stats['up_websites']}
üî¥ <b>–ù–µ–¥–æ—Å—Ç—É–ø–Ω—ã—Ö:</b> {stats['down_websites']}

üìà <b>–û–±—â–∏–π uptime:</b> {stats['avg_uptime']:.1f}%
‚è±Ô∏è <b>–°—Ä–µ–¥–Ω–µ–µ –≤—Ä–µ–º—è –æ—Ç–∫–ª–∏–∫–∞:</b> {stats['avg_response_time']:.2f}—Å

üîç <b>–í—Å–µ–≥–æ –ø—Ä–æ–≤–µ—Ä–æ–∫:</b> {stats['total_checks']}
‚úÖ <b>–£—Å–ø–µ—à–Ω—ã—Ö:</b> {stats['successful_checks']}
        """
        
        keyboard = InlineKeyboardBuilder()
        keyboard.add(InlineKeyboardButton(text="üìã –ú–æ–∏ —Å–∞–π—Ç—ã", callback_data="list_websites"))
        keyboard.add(InlineKeyboardButton(text="üìä –î–µ—Ç–∞–ª—å–Ω—ã–π –æ—Ç—á–µ—Ç", callback_data="detailed_report"))
        keyboard.adjust(1)
        
        await message.answer(
            stats_text,
            reply_markup=keyboard.as_markup()
        )


@router.message(Command("settings"))
async def cmd_settings(message: Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /settings"""
    keyboard = InlineKeyboardBuilder()
    keyboard.add(InlineKeyboardButton(text="üîî –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è", callback_data="settings_notifications"))
    keyboard.add(InlineKeyboardButton(text="üìÖ –û—Ç—á–µ—Ç—ã", callback_data="settings_reports"))
    keyboard.add(InlineKeyboardButton(text="üåç –í—Ä–µ–º–µ–Ω–Ω–∞—è –∑–æ–Ω–∞", callback_data="settings_timezone"))
    keyboard.add(InlineKeyboardButton(text="üîß –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ", callback_data="settings_advanced"))
    keyboard.adjust(2)
    
    await message.answer(
        "‚öôÔ∏è <b>–ù–∞—Å—Ç—Ä–æ–π–∫–∏</b>\n\n–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –Ω–∞—Å—Ç—Ä–æ–µ–∫:",
        reply_markup=keyboard.as_markup()
    )


@router.message(Command("status"))
async def cmd_status(message: Message):
    """–°—Ç–∞—Ç—É—Å –±–æ—Ç–∞ –∏ —Å–∏—Å—Ç–µ–º—ã"""
    from ..models import test_database_connection
    from ..services.monitor import MonitoringService
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î
    db_status = "‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∞" if await test_database_connection() else "‚ùå –ù–µ–¥–æ—Å—Ç—É–ø–Ω–∞"
    
    status_text = f"""
ü§ñ <b>–°—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã</b>

üóÑÔ∏è <b>–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö:</b> {db_status}
üîç <b>–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥:</b> ‚úÖ –ê–∫—Ç–∏–≤–µ–Ω
‚ö° <b>–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è:</b> ‚úÖ –†–∞–±–æ—Ç–∞—é—Ç

üìä <b>–í–µ—Ä—Å–∏—è:</b> 1.0.0
üÜî <b>Bot ID:</b> {message.bot.id}
    """
    
    await message.answer(status_text)


# URL Detection - –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å–∞–π—Ç–æ–≤
@router.message(F.text.regexp(r'https?://[^\s]+'))
async def auto_add_website(message: Message):
    """–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å–∞–π—Ç–∞ –ø–æ URL"""
    url = message.text.strip()
    
    keyboard = InlineKeyboardBuilder()
    keyboard.add(InlineKeyboardButton(
        text="‚ûï –î–æ–±–∞–≤–∏—Ç—å –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞", 
        callback_data=f"quick_add:{url}"
    ))
    keyboard.add(InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∏—Ç—å", callback_data="cancel"))
    keyboard.adjust(1)
    
    await message.answer(
        f"üîó –û–±–Ω–∞—Ä—É–∂–µ–Ω URL: <code>{url}</code>\n\n"
        f"–•–æ—Ç–∏—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å —ç—Ç–æ—Ç —Å–∞–π—Ç –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞?",
        reply_markup=keyboard.as_markup()
    )


def register_basic_handlers(dp) -> None:
    """–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –±–∞–∑–æ–≤—ã—Ö –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤"""
    dp.include_router(router)